#define LD1R 2 // ALIAS DES LED ET DES BOUTON
#define LD1G 1
#define LD1B 0
#define LD2R 7
#define LD2G 6
#define LD2B 5
#define LD3R 4
#define LD3G 3
#define LD3B 2
#define BTNUP 2
#define BTNDOWN 7
#define BTNLEFT 1
#define BTNRIGTH 3
#define BTNA 6
#define BTNB 4
#define BTNC 5
 
enum class Gamestate {
 MainMenu,
 Playing,
 Gameover,
 Exit
 };
 
GameState CurrentState;
 
 void ctrlLD1R(unsigned char etat){
  if(etat){
    PORTG |=(1<<LD1R);
  }
  else{
    PORTG &=~(1<<LD1R);
  }
 }
 void ctrlLD1B(unsigned char etat){
  if(etat){
    PORTG |=(1<<LD1B);
  }
  else{
    PORTG &=~(1<<LD1B);
  }
 }
 void ctrlLD1G(unsigned char etat){
  if(etat){
    PORTG |=(1<<LD1G);
  }
  else{
    PORTG &=~(1<<LD1G);
  }
 }
 void ctrlLD2R(unsigned char etat){
  if(etat){
    PORTL |=(1<<LD2R);
  }
  else{
    PORTL &=~(1<<LD2R);
  }
 }
 void ctrlLD2B(unsigned char etat){
  if(etat){
    PORTL |=(1<<LD2B);
  }
  else{
    PORTL &=~(1<<LD2B);
  }
 }
 void ctrlLD2G(unsigned char etat){
  if(etat){
    PORTL |=(1<<LD2G);
  }
  else{
    PORTL &=~(1<<LD2G);
  }
 }
 void ctrlLD3R(unsigned char etat){
  if(etat){
    PORTL |=(1<<LD3R);
  }
  else{
    PORTL &=~(1<<LD3R);
  }
 }
 void ctrlLD3B(unsigned char etat){
  if(etat){
    PORTL |=(1<<LD3B);
  }
  else{
    PORTL &=~(1<<LD3B);
  }
 }
 void ctrlLD3G(unsigned char etat){
  if(etat){
    PORTL |=(1<<LD3G);
  }
  else{
    PORTL &=~(1<<LD3G);
  }
 }
 
 unsigned char lireBTNUP(){
  return( (PINC & (1<<BTNUP) ) == 0);
 
 }
  unsigned char lireBTNDOWN(){
  return( (PINC & (1<<BTNDOWN) ) == 0);
 
 }
  unsigned char lireBTNLEFT(){
  return( (PINC & (1<<BTNLEFT) ) == 0);
 
 }
  unsigned char lireBTNRIGTH(){
  return( (PINC & (1<<BTNRIGTH) ) == 0);
 
 }
void setup() {
CurrentState = GameState::MainMenu;
DDRG = 0X07;//LES BIT LED1 A 1 POUR SORTIE
DDRL = 0XFC;// LES BIT LED 2 ET 3 A 1 POUR SORTIE
DDRC = 0X01;//LES BIT RESTE A 0 POUR ENTRÉE RESTE A 1
PORTC = 0XFD;//PULL UP DES BIT 0 QUI SONT EENTRÉE
}
 
 
void loop() {
validationLED();
validationBTN();
 switch (CurrentState){
 case GameState::MainMenu:
  break;
 case GameState::Playing:
  break;
 case GameState::GameOver:
  break;
 default:
  break;
 }
}
void validationLED(){
  ctrlLD1R(1);
  delay(1000);
  ctrlLD1R(0);
  delay(1000);
  ctrlLD2B(1);
  delay(1000);
  ctrlLD2B(0);
  delay(1000);
  ctrlLD3G(1);
  delay(1000);
 ctrlLD3G(0);
}
void validationBTN(){
 
  ctrlLD1R(lireBTNUP());
  ctrlLD2B(lireBTNDOWN());
  ctrlLD3G(lireBTNLEFT());
  ctrlLD2R(lireBTNRIGTH());
}
